{"ast":null,"code":"'use strict';\n\nmodule.exports = function ColumnWidths(tableComponent) {\n  var columns = tableComponent.columns;\n  var columnWidths = {};\n  var remainder = 100;\n  var unspecified = columns.length;\n  columns.forEach(function (col) {\n    if (typeof col.width !== 'undefined') {\n      if (typeof col.width !== 'number') {\n        throw new Error('column width property must be a percent number');\n      }\n\n      if (col.width < 0 || col.width > 100) {\n        throw new Error('column width must be between 0 and 100');\n      }\n\n      --unspecified;\n      remainder = remainder - col.width;\n      columnWidths[col.name] = col.width;\n    }\n  });\n\n  if (remainder < 0) {\n    throw new Error('total column widths may not exceed 100 percent');\n  }\n\n  if (remainder > 0 && unspecified) {\n    (function () {\n      var amount = remainder / unspecified;\n      columns.forEach(function (col) {\n        if (typeof col.width === 'undefined') {\n          columnWidths[col.name] = amount;\n        }\n      });\n    })();\n  }\n\n  this.getSize = function (tableWidth, colName) {\n    var pct = columnWidths[colName];\n    var width = Math.floor(tableWidth * pct / 100);\n    return width;\n  };\n\n  this.getWidth = function (colName) {\n    if (tableComponent.props.resize) {\n      var table = document.getElementById(tableComponent.id);\n      var tableBody = document.getElementById(tableComponent.bodyId);\n\n      if (!table) {\n        return;\n      }\n\n      var tw = table.offsetWidth;\n      tableBody.style.width = tw;\n      return this.getSize(tw, colName);\n    } else {\n      return this.getPercent(colName);\n    }\n  };\n\n  this.getPercent = function (colName) {\n    return '' + columnWidths[colName] + '%';\n  };\n};","map":{"version":3,"sources":["/home/anuja/Documents/Database-Browser-Using-ReactGo/my-app/Frontend/node_modules/reactjs-bootstrap-table/lib/ColumnWidths.js"],"names":["module","exports","ColumnWidths","tableComponent","columns","columnWidths","remainder","unspecified","length","forEach","col","width","Error","name","amount","getSize","tableWidth","colName","pct","Math","floor","getWidth","props","resize","table","document","getElementById","id","tableBody","bodyId","tw","offsetWidth","style","getPercent"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,cAAtB,EAAsC;AAErD,MAAIC,OAAO,GAAGD,cAAc,CAACC,OAA7B;AACA,MAAIC,YAAY,GAAG,EAAnB;AAEA,MAAIC,SAAS,GAAG,GAAhB;AACA,MAAIC,WAAW,GAAGH,OAAO,CAACI,MAA1B;AAEAJ,EAAAA,OAAO,CAACK,OAAR,CAAgB,UAAUC,GAAV,EAAe;AAC7B,QAAI,OAAOA,GAAG,CAACC,KAAX,KAAqB,WAAzB,EAAsC;AACpC,UAAI,OAAOD,GAAG,CAACC,KAAX,KAAqB,QAAzB,EAAmC;AACjC,cAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;AACD,UAAIF,GAAG,CAACC,KAAJ,GAAY,CAAZ,IAAiBD,GAAG,CAACC,KAAJ,GAAY,GAAjC,EAAsC;AACpC,cAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,QAAEL,WAAF;AACAD,MAAAA,SAAS,GAAGA,SAAS,GAAGI,GAAG,CAACC,KAA5B;AACAN,MAAAA,YAAY,CAACK,GAAG,CAACG,IAAL,CAAZ,GAAyBH,GAAG,CAACC,KAA7B;AACD;AACF,GAZD;;AAaA,MAAIL,SAAS,GAAG,CAAhB,EAAmB;AACjB,UAAM,IAAIM,KAAJ,CAAU,gDAAV,CAAN;AACD;;AACD,MAAIN,SAAS,GAAG,CAAZ,IAAiBC,WAArB,EAAkC;AAChC,KAAC,YAAY;AACX,UAAIO,MAAM,GAAGR,SAAS,GAAGC,WAAzB;AACAH,MAAAA,OAAO,CAACK,OAAR,CAAgB,UAAUC,GAAV,EAAe;AAC7B,YAAI,OAAOA,GAAG,CAACC,KAAX,KAAqB,WAAzB,EAAsC;AACpCN,UAAAA,YAAY,CAACK,GAAG,CAACG,IAAL,CAAZ,GAAyBC,MAAzB;AACD;AACF,OAJD;AAKD,KAPD;AAQD;;AAED,OAAKC,OAAL,GAAe,UAAUC,UAAV,EAAsBC,OAAtB,EAA+B;AAC5C,QAAIC,GAAG,GAAGb,YAAY,CAACY,OAAD,CAAtB;AACA,QAAIN,KAAK,GAAGQ,IAAI,CAACC,KAAL,CAAWJ,UAAU,GAAGE,GAAb,GAAmB,GAA9B,CAAZ;AACA,WAAOP,KAAP;AACD,GAJD;;AAMA,OAAKU,QAAL,GAAgB,UAAUJ,OAAV,EAAmB;AACjC,QAAId,cAAc,CAACmB,KAAf,CAAqBC,MAAzB,EAAiC;AAC/B,UAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwBvB,cAAc,CAACwB,EAAvC,CAAZ;AACA,UAAIC,SAAS,GAAGH,QAAQ,CAACC,cAAT,CAAwBvB,cAAc,CAAC0B,MAAvC,CAAhB;;AACA,UAAI,CAACL,KAAL,EAAY;AACV;AACD;;AACD,UAAIM,EAAE,GAAGN,KAAK,CAACO,WAAf;AACAH,MAAAA,SAAS,CAACI,KAAV,CAAgBrB,KAAhB,GAAwBmB,EAAxB;AACA,aAAO,KAAKf,OAAL,CAAae,EAAb,EAAiBb,OAAjB,CAAP;AACD,KATD,MASO;AACL,aAAO,KAAKgB,UAAL,CAAgBhB,OAAhB,CAAP;AACD;AACF,GAbD;;AAeA,OAAKgB,UAAL,GAAkB,UAAUhB,OAAV,EAAmB;AACnC,WAAO,KAAKZ,YAAY,CAACY,OAAD,CAAjB,GAA6B,GAApC;AACD,GAFD;AAGD,CA3DD","sourcesContent":["'use strict';\n\nmodule.exports = function ColumnWidths(tableComponent) {\n\n  var columns = tableComponent.columns;\n  var columnWidths = {};\n\n  var remainder = 100;\n  var unspecified = columns.length;\n\n  columns.forEach(function (col) {\n    if (typeof col.width !== 'undefined') {\n      if (typeof col.width !== 'number') {\n        throw new Error('column width property must be a percent number');\n      }\n      if (col.width < 0 || col.width > 100) {\n        throw new Error('column width must be between 0 and 100');\n      }\n      --unspecified;\n      remainder = remainder - col.width;\n      columnWidths[col.name] = col.width;\n    }\n  });\n  if (remainder < 0) {\n    throw new Error('total column widths may not exceed 100 percent');\n  }\n  if (remainder > 0 && unspecified) {\n    (function () {\n      var amount = remainder / unspecified;\n      columns.forEach(function (col) {\n        if (typeof col.width === 'undefined') {\n          columnWidths[col.name] = amount;\n        }\n      });\n    })();\n  }\n\n  this.getSize = function (tableWidth, colName) {\n    var pct = columnWidths[colName];\n    var width = Math.floor(tableWidth * pct / 100);\n    return width;\n  };\n\n  this.getWidth = function (colName) {\n    if (tableComponent.props.resize) {\n      var table = document.getElementById(tableComponent.id);\n      var tableBody = document.getElementById(tableComponent.bodyId);\n      if (!table) {\n        return;\n      }\n      var tw = table.offsetWidth;\n      tableBody.style.width = tw;\n      return this.getSize(tw, colName);\n    } else {\n      return this.getPercent(colName);\n    }\n  };\n\n  this.getPercent = function (colName) {\n    return '' + columnWidths[colName] + '%';\n  };\n};"]},"metadata":{},"sourceType":"script"}