{"ast":null,"code":"'use strict'; //\n// Handle selection events and callbacks for the table component. this\n// reads the components data and selected properties and sets the\n// components anchor state when clicking for multiple select.\n//\n\nmodule.exports = function (tableComponent) {\n  var type = void 0;\n\n  function noop() {}\n\n  var onChange = tableComponent.props.onChange || noop;\n  var select = tableComponent.select || 'none';\n\n  if (select === 'multiple' || select === 'single' || select === 'none') {\n    type = select;\n  } else {\n    throw new Error('bootstrap table: select must be single, multiple or none');\n  }\n\n  this.getType = function () {\n    return type;\n  };\n\n  this.rowClicked = function (e) {\n    var row = tableComponent.getKeyAndIndex(e);\n    if (type === 'none') return row; // nothing to select, just return the row clicked\n\n    if (!row) {\n      return null;\n    }\n\n    var key = row.key;\n    var index = row.index;\n\n    if (tableComponent.props.select === 'multiple') {\n      this.multiSelect(key, index, e.shiftKey);\n    } else {\n      this.singleSelect(key, index);\n    }\n\n    return row;\n  };\n\n  this.singleSelect = function (key, index) {\n    var data = tableComponent.props.data || [];\n    var current = tableComponent.props.selected || {};\n    var selected = {};\n\n    if (current[key]) {\n      onChange({}); // already selected, deselect it\n    } else {\n      selected[key] = data[index];\n      onChange(selected);\n    }\n  };\n\n  this.multiSelect = function (key, index, shiftKey) {\n    var current = tableComponent.props.selected || {};\n    var data = tableComponent.props.data || [];\n    var selected = {};\n    Object.keys(current).forEach(function (prop) {\n      selected[prop] = current[prop];\n    });\n\n    if (shiftKey && tableComponent.state.anchor !== null) {\n      var upper = null,\n          lower = null;\n\n      if (tableComponent.state.anchor > index) {\n        lower = index;\n        upper = tableComponent.state.anchor;\n      } else if (tableComponent.state.anchor <= index) {\n        lower = tableComponent.state.anchor;\n        upper = index;\n      } else {\n        tableComponent.setState({\n          anchor: index\n        });\n        selected[key] = data[index];\n      }\n\n      if (lower !== null) {\n        selected = {};\n\n        for (var i = lower; i <= upper; i++) {\n          var item = data[i];\n          selected[item[tableComponent.keyName]] = item;\n        }\n      }\n    } else {\n      if (selected[key]) {\n        delete selected[key];\n      } else {\n        selected[key] = data[index];\n      }\n\n      tableComponent.setState({\n        anchor: index\n      });\n    }\n\n    tableComponent.onChange(selected);\n  };\n};","map":{"version":3,"sources":["/home/anuja/Documents/my-app/Frontend/node_modules/reactjs-bootstrap-table/lib/Selection.js"],"names":["module","exports","tableComponent","type","noop","onChange","props","select","Error","getType","rowClicked","e","row","getKeyAndIndex","key","index","multiSelect","shiftKey","singleSelect","data","current","selected","Object","keys","forEach","prop","state","anchor","upper","lower","setState","i","item","keyName"],"mappings":"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","sourcesContent":["'use strict';\n\n//\n// Handle selection events and callbacks for the table component. this\n// reads the components data and selected properties and sets the\n// components anchor state when clicking for multiple select.\n//\nmodule.exports = function (tableComponent) {\n\n  var type = void 0;\n  function noop() {}\n  var onChange = tableComponent.props.onChange || noop;\n\n  var select = tableComponent.select || 'none';\n  if (select === 'multiple' || select === 'single' || select === 'none') {\n    type = select;\n  } else {\n    throw new Error('bootstrap table: select must be single, multiple or none');\n  }\n\n  this.getType = function () {\n    return type;\n  };\n\n  this.rowClicked = function (e) {\n    var row = tableComponent.getKeyAndIndex(e);\n    if (type === 'none') return row; // nothing to select, just return the row clicked\n\n    if (!row) {\n      return null;\n    }\n    var key = row.key;\n    var index = row.index;\n\n\n    if (tableComponent.props.select === 'multiple') {\n      this.multiSelect(key, index, e.shiftKey);\n    } else {\n      this.singleSelect(key, index);\n    }\n    return row;\n  };\n\n  this.singleSelect = function (key, index) {\n    var data = tableComponent.props.data || [];\n    var current = tableComponent.props.selected || {};\n    var selected = {};\n\n    if (current[key]) {\n      onChange({}); // already selected, deselect it\n    } else {\n      selected[key] = data[index];\n      onChange(selected);\n    }\n  };\n\n  this.multiSelect = function (key, index, shiftKey) {\n    var current = tableComponent.props.selected || {};\n    var data = tableComponent.props.data || [];\n    var selected = {};\n    Object.keys(current).forEach(function (prop) {\n      selected[prop] = current[prop];\n    });\n\n    if (shiftKey && tableComponent.state.anchor !== null) {\n      var upper = null,\n          lower = null;\n      if (tableComponent.state.anchor > index) {\n        lower = index;\n        upper = tableComponent.state.anchor;\n      } else if (tableComponent.state.anchor <= index) {\n        lower = tableComponent.state.anchor;\n        upper = index;\n      } else {\n        tableComponent.setState({ anchor: index });\n        selected[key] = data[index];\n      }\n      if (lower !== null) {\n        selected = {};\n        for (var i = lower; i <= upper; i++) {\n          var item = data[i];\n          selected[item[tableComponent.keyName]] = item;\n        }\n      }\n    } else {\n      if (selected[key]) {\n        delete selected[key];\n      } else {\n        selected[key] = data[index];\n      }\n      tableComponent.setState({ anchor: index });\n    }\n\n    tableComponent.onChange(selected);\n  };\n};"]},"metadata":{},"sourceType":"script"}